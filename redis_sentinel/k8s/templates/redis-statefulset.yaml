---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: {{ .Release.Namespace }}
spec:
  clusterIP: None
  selector:
    app: redis
  ports:
  - port: 6379
    name: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: redis
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: {{ .Values.repository }}/{{ .Values.images.redis }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{ if .Values.securityContext.privileged }}
        securityContext:
          privileged: true
        {{ end }}
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis_password
        ports:
        - containerPort: 6379
        command: ["/bin/sh"]
        args:
        - "-c"
        - |
          if [ $(hostname) = "redis-0" ]; then
            redis-server --port 6379 --requirepass "${REDIS_PASSWORD}"
          else
            redis-server --port 6379 --slaveof redis-0.redis.redis.svc.cluster.local 6379 --masterauth "${REDIS_PASSWORD}" --requirepass "${REDIS_PASSWORD}"
          fi
        resources:
        {{ toYaml .Values.resources | nindent 12 }}
      {{ if .Values.securityContext.runAsRoot }}
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      {{ end }}
      tolerations:
      {{ toYaml .Values.tolerations | nindent 8 }}